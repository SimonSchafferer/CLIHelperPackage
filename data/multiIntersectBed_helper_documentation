TEST1
chr1	14000	15000	.	bla	-
chr1	15000	16000	.	bla	-
chr2	15000	16000	.	bla	+
chr3	15000	16000	.	bla	+
chr4	1	15	.	asf	+
chr5 	6	10	.	fdsa	+
chr6 	4	9	.	fdsa	-

TEST2
chr1	14000	15000	.	bla	-
chr1	15000	16000	.	bla	-
chr2	15000	16000	.	bla	+
chr3	15000	16000	.	bla	+
chr4	2	11	.	asf	+
chr5 	5	12	.	fdsa	+
chr6 	7	11	.	fdsa	-

TEST3
chr1	15000	16000	.	bla	-
chr2	15000	16000	.	bla	+
chr3	15000	16000	.	bla	+
chr4	3	20	.	asf	+
chr5 	6	10	.	fdsa	+

When contig clustering normal: 
multiIntersectBed_helper.pl -o /tmp/test -i test1.bed test2.bed test3.bed
chr1	15000	16000	5	0	-
chr2	15000	16000	1	0	+
chr3	15000	16000	2	0	+
chr4	3	11	3	0	+
chr5 	6	10	4	0	+

When Groupwise restriction and merge: One group has to have reads present continuosly in all contigs -> then the longest contig of all (also other group when in only one present) is chosen!
multiIntersectBed_helper.pl -o /tmp/test -g 1 1 2 -i test1.bed test2.bed test3.bed
chr1	14000	16000	-
chr2	15000	16000	+
chr3	15000	16000	+
chr4	2	20	+
chr5 	6	10	+
chr6 	7	9	-

This mimicks what mareks script is doing when setting all groups to one member!
multiIntersectBed_helper.pl -o /tmp/test -g 1 1 1 -i test1.bed test2.bed test3.bed
chr1	15000	16000	-
chr2	15000	16000	+
chr3	15000	16000	+
chr4	3	11	+
chr5 	6	10	+



